{"version":3,"sources":["webpack://boilerplate-fullstack/./client/styles/2-base/_typography.scss","webpack://boilerplate-fullstack/./client/styles/1-helpers/_vars.scss","webpack://boilerplate-fullstack/./client/styles/main.scss","webpack://boilerplate-fullstack/./client/styles/2-base/__base.scss","webpack://boilerplate-fullstack/./client/styles/3-layout/_header.scss","webpack://boilerplate-fullstack/./client/styles/3-layout/_navigation.scss","webpack://boilerplate-fullstack/./client/styles/1-helpers/_mixins.scss"],"names":[],"mappings":"kLAKA,YAEI,4BAEA,6BCIM,CDPN,eAEA,mBEDJ,CCHA,EACI,sBACA,QDMJ,CERA,OAEI,wBHFK,CGGL,aAFA,aAGA,6BFWJ,CGfA,KACI,UHkBJ,CGfA,UACI,aAEA,gCJGQ,CIJR,iBAGA,oBHkBJ,CGhBI,0BAHA,aHsBJ,CIIU,yBD9BV,UAYQ,cAEA,cJZI,CIWJ,iBHmBN,CACF,CGfA,WAMI,mBAJA,WADA,eAIA,aAFA,iBACA,YAGA,kBHkBJ,CGhBI,iBACI,aHkBR,CIhBU,yBDZV,WAcQ,YHkBN,CACF,CGfA,WAEI,WADA,eAEA,eACA,kBAEA,WADA,QHmBJ,CGhBI,iBACI,aHkBR,CIjCU,yBDMV,WAaQ,YHkBN,CACF,CGfA,UAGC,wBJ5DQ,CI2DL,aADA,WHoBJ,CI5CU,yBDuBV,UAQQ,qBAFN,mBACM,8BAGA,kBHkBN,CACF,CGfA,iBAKI,mBAIA,4CARA,wBJxEK,CIyEL,aACA,sBAIA,YAHA,6BAQA,YADA,kBAEA,MAHA,4BAJA,YAEA,WHuBJ,CGhBI,oBACI,GACE,mBHkBR,CGhBM,IACE,qBHkBR,CGhBM,GACE,mBHkBR,CACF,CGfI,2BACI,aHiBR,CIlFU,yBDqCV,iBAgCO,YHiBL,CACF","file":"styles.min.css","sourcesContent":["@use \"sass:math\";\n@use '../1-helpers/mixins';\n@use '../1-helpers/functions';\n@use '../1-helpers/vars';\n\n.page-title {\n    font-size: 2rem;\n    color: rgba(35, 108, 243, 0.533);\n    padding-bottom: vars.$base-size;\n    font-family: vars.$heading;\n}","@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;500&display=swap');\n\n// Set your brand colors\n$yellow: #ebee96;\n$purple: #302085;\n\n$background: $yellow;\n\n//Sizing\n$base-size: 1rem;\n\n// Font Variables\n$heading: 'Roboto Slab', serif;   \n$paragraph: 'Quicksand', sans-serif;","@import url(\"https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@700&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Quicksand:wght@300;500&display=swap\");\n.page-title {\n  font-size: 2rem;\n  color: rgba(35, 108, 243, 0.533);\n  padding-bottom: 1rem;\n  font-family: \"Roboto Slab\", serif;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n}\n\nheader {\n  height: 100px;\n  background-color: #ebee96;\n  display: flex;\n  justify-content: space-between;\n}\n\n.nav {\n  width: auto;\n}\n\n.nav-link {\n  display: none;\n  font-size: 1.5rem;\n  font-family: \"Quicksand\", sans-serif;\n  color: #302085;\n  text-decoration: none;\n}\n.nav-link:hover {\n  color: #302085;\n}\n@media (min-width: 768px) {\n  .nav-link {\n    display: block;\n    padding-left: 1rem;\n    font-size: 1rem;\n  }\n}\n\n.hamburger {\n  cursor: pointer;\n  color: #fff;\n  font-size: 2.5rem;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding-right: 1rem;\n}\n.hamburger:hover {\n  color: #302085;\n}\n@media (min-width: 768px) {\n  .hamburger {\n    display: none;\n  }\n}\n\n.close-btn {\n  cursor: pointer;\n  color: #fff;\n  font-size: 3rem;\n  position: absolute;\n  top: 22px;\n  right: 12px;\n}\n.close-btn:hover {\n  color: #302085;\n}\n@media (min-width: 768px) {\n  .close-btn {\n    display: none;\n  }\n}\n\n.nav-menu {\n  height: 100%;\n  display: flex;\n  background-color: #ebee96;\n}\n@media (min-width: 768px) {\n  .nav-menu {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding-right: 3rem;\n  }\n}\n\n.nav-menu-toggle {\n  background-color: #ebee96;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100vw;\n  height: 50vh;\n  z-index: 100;\n  animation: growDown 300ms ease-in-out forwards;\n  transform-origin: top center;\n  position: relative;\n  left: -241px;\n  top: 0;\n}\n@keyframes growDown {\n  0% {\n    transform: scaleY(0);\n  }\n  80% {\n    transform: scaleY(1.1);\n  }\n  100% {\n    transform: scaleY(1);\n  }\n}\n.nav-menu-toggle .nav-link {\n  display: block;\n}\n@media (min-width: 768px) {\n  .nav-menu-toggle {\n    display: none;\n  }\n}","@use \"sass:math\";\n@use './typography';\n// @use '../1-helpers/vars';\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n}\n\n// body {\n//     font-size: 1em;\n//     font-family: vars.$paragraph;\n//     line-height: 1.5;\n// }","@use '../1-helpers/vars';\n@use '../1-helpers/functions';\n@use '../1-helpers/mixins';\n\nheader {\n    height: 100px;\n    background-color: vars.$yellow;\n    display: flex;\n    justify-content: space-between;\n}\n\n// .logo-image {\n//     width: 15rem;\n//     padding-left: vars.$base-size;\n//     height: 100%;\n\n//     @include mixins.media-queries(mobile, min) {\n//         padding-left: vars.$base-size * 3;\n//         width: 20rem;\n//     }\n// }","@use '../1-helpers/vars';\n@use '../1-helpers/functions';\n@use '../1-helpers/mixins';\n\n.nav {\n    width: auto;\n}\n\n.nav-link {\n    display: none;\n    font-size: vars.$base-size * 1.5;\n    font-family: vars.$paragraph;\n    color: vars.$purple;\n    text-decoration: none;\n\n    &:hover {\n        color: vars.$purple;\n    }\n\n    @include mixins.media-queries(mobile, min) {\n        display: block;\n        padding-left: vars.$base-size;\n        font-size: vars.$base-size;\n    }\n}\n\n.hamburger {\n    cursor: pointer;\n    color: #fff;\n    font-size: vars.$base-size * 2.5;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding-right: vars.$base-size;\n\n    &:hover {\n        color: vars.$purple;\n    }\n\n    @include mixins.media-queries(mobile, min) {\n        display: none;\n    }\n}\n\n.close-btn {\n    cursor: pointer;\n    color: #fff;\n    font-size: vars.$base-size * 3;\n    position: absolute;\n    top: 22px;\n    right: 12px;\n\n    &:hover {\n        color: vars.$purple;\n    }\n\n    @include mixins.media-queries(mobile, min) {\n        display: none;\n    }\n}\n\n.nav-menu {\n    height: 100%;\n    display: flex;\n\tbackground-color: vars.$yellow;\n\n    @include mixins.media-queries(mobile, min) {\n\t\tflex-direction: row;\n        justify-content: space-between;\n        align-items: flex-end;\n        // padding-bottom: vars.$base-size;\n        padding-right: vars.$base-size * 3;\n    }\n}\n\n.nav-menu-toggle {\n    background-color: vars.$yellow;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    width:100vw;\n    height: 50vh;\n    z-index: 100;\n    animation: growDown 300ms ease-in-out forwards;\n    transform-origin: top center;\n    position: relative;\n    left: -241px;\n    top: 0;\n\n    @keyframes growDown {\n        0% {\n          transform: scaleY(0)\n        }\n        80% {\n          transform: scaleY(1.1)\n        }\n        100% {\n          transform: scaleY(1)\n        }\n      }\n\n    & .nav-link {\n        display: block;\n    }\n\n    @include mixins.media-queries(mobile, min) {\n       display: none;\n    } \n}","@mixin word-wrap($break-word: break-word, $break-all: break-all, $auto: auto) {\n    overflow-wrap: $break-word;\n    word-wrap: $break-word;\n    -ms-word-break: $break-all;\n    word-break: $break-all;\n    word-break: $break-word;\n    -ms-hyphens: $auto;\n    -moz-hyphens: $auto;\n    -webkit-hyphens: $auto;\n    hyphens: $auto;\n}\n\n@mixin prefix($declarations, $prefixes: ()) {\n    @each $property, $value in $declarations {\n        @each $prefix in $prefixes {\n            #{'-' + $prefix + '-' + $property}: $value\n        }\n        #{$property}: $value;\n    }\n}\n\n// Breakpoints\n$breakpoints: (\n    mobile: 768px,\n    tablet: 1020px,\n    laptop: 1240px,\n    desktop: 1480px\n);\n\n@mixin media-queries($breakpoint, $direction) {\n    @if map-has-key($breakpoints, $breakpoint) {\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\n\n        @if $direction == max {\n          @media (max-width: ($breakpoint-value - 1)) {\n            @content;\n          }\n        } @else if $direction == min {\n          @media (min-width: $breakpoint-value) {\n            @content;\n          }\n        } @else {\n          @media ($direction: $breakpoint-value) {\n            @content\n          }\n        }\n    \n    \n    } @else {\n        @if $direction == max {\n            @media (max-width: $breakpoint) {\n            @content;\n            }\n        } @else if $direction == min {\n            @media (min-width: $breakpoint) {\n            @content;\n            }\n        } @else {\n            @media ($direction: $breakpoint) {\n            @content\n            }\n        }\n    }\n}"],"sourceRoot":""}